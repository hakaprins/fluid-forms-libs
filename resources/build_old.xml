<project name="Fluid-Forms-Libs" default="build" basedir="../">
    
	<description>
		Fluid-Forms-Libs ant build file.
    </description>

	
<!-- #### (1) where are your processing libraries located? edit location. #### -->
	<property name="processing" location="/Users/stephen/Documents/Processing/libraries"/>
	<property name="toolPath" location="/Users/stephen/Documents/Processing/tools/Groocessing/tool"/>
	<property name="processingJarsPath" location="/Applications/Development/Processing.app/Contents/Resources/Java/"/>


<!-- #### (2) where are the jar files located that are required for compiling 
		your library such as e.g. core.jar ? edit location. #### -->

	<property name="libraryClasspath"  location="lib"/>	
	<path id="library-classpath">
		<fileset dir="${libraryClasspath}" >		
<!-- #### (3) add the jar files that are required for compiling. edit name.
		for more include files. duplicate <include name="" /> #### -->
			<include name="core.jar"/>
			<include name="json.jar"/>
			<include name="velocity-dep-1.4.jar"/>
			<include name="JimiProClasses.jar"/>
			<include name="antlr.jar"/>
			<include name="javascript.jar"/>
			<include name="servlet-api-2.5-6.1.4.jar"/>
			<include name="groovy-all-1.6.1.jar" />
		</fileset>
		<fileset dir="${processingJarsPath}" >		
			<include name="pde.jar"/>
		</fileset>
	</path>		
	

<!-- #### (4) set the java version that should be used to compile your library. #### -->	
	<property name="javaVersion" value="1.5"/>
		
<!-- #### 	the following items are properties that will be used to make changes to 
				the html document template. values of properties will be 
				implemented ito the document automatically. #### -->	
				
<!-- #### (5) who is the author of this library?  edit value.  #### -->
	<property name="author" value="Stephen Williams (Fluid Forms)"/>
	
<!-- #### (6) which copyright?  edit value.  #### -->
	<property name="copyright" value="(c) 2009"/>

<!-- #### (7) give your library a name. edit value.  #### -->
	<property name="libraryName"  value="FluidFormsLibs"/>
	
<!-- #### (8) give your library a name. edit value.   #### -->
	<property name="versionNumber"  value="0.2.03"/>
	
<!-- #### (9) your contact url. edit value. #### -->
	<property name="yourLink"  value="http://www.fluid-forms.com" />
	
<!-- #### (10) a comma separated list of keywords describing your library. edit value. #### -->
	<property name="keywords"  value="3d,stl,obj,import,export,utils,navigation" />
	
<!-- #### (11) a comma separated list of platforms the library has been tested. edit value. #### -->
	<property name="tested:platform"  value="OSX" />
	
<!-- #### (12) the processing version this library has been tested with. edit value. #### -->
	<property name="tested:processingVersion"  value="1.5.1" />
	
<!-- #### (13) does the library depend on any other library, dll, jnilib, etc. edit value. #### -->
	<property name="tested:dependencies"  value="" />
	
<!-- #### (14) where can the source code be found? edit value. #### -->
	<property name="source:host"  value="google code" />
	<property name="source:url"  value="http://code.google.com/p/fluid-forms-libs" />
	<property name="source:repository"  value="http://code.google.com/p/fluid-forms-libs/source/browse/" />








	
	
	
	
	<!-- no changes or adjustments required below -->
	
	
	
	
	
	
	
	
	
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="./resources/code/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>
	<property name="jarFile" value="${libraryName}.jar"/>
	<property name="src" location="src"/>
	<property name="bin" location="bin"/>
	<property name="reference" location="reference"/>
	<property name="dist" location="distribution"/>
	
	
	
	<target name="init">
		<echo>Properties initialized.
			src path			${src}
			bin path 			${bin}
			libraryClasspath		${libraryClasspath}
			processing Libraries	${processing}
			java version		${javaVersion}
		</echo>		
		<echo>building library ...</echo>
		<!-- Create the time stamp -->
		<tstamp> 
			<format property="date" pattern="MM/dd/yyyy" offset="0" unit="hour"/>
		</tstamp>
		<mkdir dir="${dist}"/>
	</target>
  
	<!-- compile the library -->
	<target name="compile" depends="init" description="compile the source" >  	
		<javac srcdir="${src}" destdir="${bin}" source="${javaVersion}">
			<classpath>
				<path refid="library-classpath"/>
			</classpath>
		</javac>
	 </target>

	<!-- build the distribution of the library -->
  <target name="build" depends="compile" description="generate the distribution" >
  	<!-- delete the previous content of the ${dist} folder -->
  	<delete dir="${dist}" />
  	
  	<!-- build the structure for ${dist} -->
  	<mkdir dir="${dist}" />
  	<mkdir dir="${dist}/library" />
  	<mkdir dir="${dist}/examples" />
  	<mkdir dir="${dist}/reference" />
  	<mkdir dir="${dist}/src" />
  	<!-- exclude data directory and processing sketches (default package) -->
  	<jar jarfile="${dist}/library/${jarFile}" basedir="${bin}"
  		excludes="data/data/ data/params.xml *.*"
  	/>
  	<copy todir="${dist}/examples">
  		<fileset dir="examples"/>
  	</copy>
  	<!-- exclude data directory and processing sketches (default package) -->
  	<copy todir="${dist}/src">
  		<fileset dir="src"
  			excludes="data/*.*"/>
  	</copy> 
  	<copy todir="${dist}/library/">
		<fileset dir="${libraryClasspath}" >		
			<include name="velocity-dep-1.4.jar"/>
			<include name="antlr.jar"/>
			<include name="json.jar"/>
			<include name="javascript.jar"/>
			<include name="JimiProClasses.jar"/>
			<include name="groovy-all-1.6.1.jar"/>
		</fileset>
  	</copy>
  	<copy todir="${toolPath}">
		<fileset dir="${libraryClasspath}" >		
			<include name="groovy-all-1.6.1.jar"/>
		</fileset>
  	</copy>
  	<copy todir="${toolPath}">
		<fileset dir="${dist}/library/" >		
			<include name="${jarFile}"/>
		</fileset>
  	</copy>
  	
  	
	<!-- create the java reference of the library -->
 	<mkdir dir="${reference}" />
 	<javadoc bottom="processing library ${libraryName} by ${author}. ${copyright}"
			 classpathref="library-classpath" 
			 classpath="${libraryClasspath}/core.jar" 
 			 destdir="${reference}" 
 			 verbose="false" 
 			 stylesheetfile="resources/stylesheet.css" 
 			 doctitle="Javadocs: ${libraryName}" 
 			 public="true" version="false" 
 			 windowtitle="Javadocs: ${libraryName}">
 		<taglet name="ExampleTaglet" path="resources/code" />
 		<fileset dir="${src}" defaultexcludes="yes">
 			<!-- #### (9) add packages to be added to reference. #### -->
			<include name="eu/**/*.java"/>
		</fileset>
 	</javadoc>
 	
	<copy todir="${dist}/reference">
		<fileset dir="${reference}" />
	</copy>
  	
  	<antcall target="installGroocessing" />

  	<!-- copy the jar file to processing's libraries -->
 	<mkdir dir="${processing}/${libraryName}" />
 	<copy todir="${processing}/${libraryName}">
 		<fileset dir="${dist}"/>
 	</copy> 
  	<chmod file="${processing}/${libraryName}/installGroocessing.sh" perm="ugo+rx"/>
  	<chmod file="${dist}/installGroocessing.sh" perm="ugo+rx"/>

  	<copy file="resources/library.properties" tofile="${dist}/library.properties" />
  	<!-- zip the distribution of the library -->
  	<zip destfile="${dist}/${libraryName}.zip" basedir="${dist}" excludes="**/_DS.Store, **/applet/, installGroocessing.sh">
  		<zipfileset dir="${dist}" includes="installGroocessing.sh" filemode="755"/>
	</zip>

  	
  	<!-- organize the ${dist} folder -->
  	<mkdir dir="${dist}/web" />
  	<move todir="${dist}/web/reference">
  		<fileset dir="${dist}/reference" />
  	</move>
  	
  	<move todir="${dist}/web/examples">
  		<fileset dir="${dist}/examples" />
  	</move>
  	
  	<delete dir="${dist}/library" />
  	
  	<copy todir="${dist}/web">
  		<fileset dir="web" />
  	</copy>
  	
  	<!--
  	format the index.html file. 
  	regular expressions are used to parse the web index.html file. 
  	key words starting and ending with ## are replaced by values 
  	defined earlier in the beginning of this build file.
  	-->
  	
  	<replaceregexp file="${dist}/web/index.html"
  	                         match="##yourLibrary##"
  	                         replace="${libraryName}"
  	                         flags="g" />
  	
  	<replaceregexp file="${dist}/web/index.html"
							match="##author##"
							replace="${author}"
							flags="g" />
  	
  	<replaceregexp file="${dist}/web/index.html"
							match="##versionNumber##"
							replace="${versionNumber}"
							flags="g" />
  	
	<replaceregexp file="${dist}/web/index.html"
							match="##yourLink##"
  							replace="${yourLink}"
							flags="g" />
  	
  	<replaceregexp file="${dist}/web/index.html"
  							match="##date##"
  	  						replace="${date}"
  	  						flags="g" />
  	  						
  	 <replaceregexp file="${dist}/web/index.html"
  							match="##keywords##"
  	  						replace="${keywords}"
  	  						flags="g" />
  	  						
  	  						
  	  						
  	 <replaceregexp file="${dist}/web/index.html"
  							match="##tested:platform##"
  	  						replace="${tested:platform}"
  	  						flags="g" />
  	 <replaceregexp file="${dist}/web/index.html"
  							match="##tested:processingVersion##"
  	  						replace="${tested:processingVersion}"
  	  						flags="g" />
  	 <replaceregexp file="${dist}/web/index.html"
  							match="##tested:dependencies##"
  	  						replace="${tested:dependencies}"
  	  						flags="g" />
  	 <replaceregexp file="${dist}/web/index.html"
  							match="##source:host##"
  	  						replace="${source:host}"
  	  						flags="g" />
  	 <replaceregexp file="${dist}/web/index.html"
  							match="##source:url##"
  	  						replace="${source:url}"
  	  						flags="g" />
  	 <replaceregexp file="${dist}/web/index.html"
  							match="##source:repository##"
  	  						replace="${source:repository}"
  	  						flags="g" />

  	
  	<echo>---------------------</echo>
  	<antcall target="processExamples" />
  	<echo>---------------------</echo>
  	
  	<replaceregexp file="${dist}/web/index.html"
  	  							match="##examples##"
  	  	  						replace=""
  	  	  						flags="g" />
  	  	  						
  	  	  						
  	<!-- finish organizating library's distribution -->
  	<mkdir dir="${dist}/web/download" />
  	<copy file="${dist}/${libraryName}.zip" tofile="${dist}/web/download/${libraryName}-${versionNumber}.zip" />
  	<copy file="resources/library.properties" tofile="${dist}/web/download/${libraryName}.txt" />
  	<move file="${dist}/${libraryName}.zip" todir="${dist}/web/download" />

  	<copy todir="${processing}/${libraryName}/reference">
		<fileset dir="${reference}" />
	</copy>
  	
  	
  	<echo>done, finished.</echo>
 </target>
 
 
 	
	<!-- parsing the examples folder -->
	<target name="processExamples">
		<dirset id="examples.contents" dir="examples" excludes="*/*"/>
		<property name="examples.list" refid="examples.contents"/>
		<foreach list="${examples.list}" target="addExamples" param="exampleDir" delimiter=";">
		</foreach>
	</target>
		
	<target name="addExamples">
		<replaceregexp file="${dist}/web/index.html"
	  					match="(##examples##)"
	  	  				replace="&lt;li&gt;&lt;a href=&quot;examples/${exampleDir}/${exampleDir}.pde&quot;&gt;${exampleDir}&lt;/a&gt;&lt;/li&gt; \1"
	  	  				flags="g" />
	</target>
	<target name="installGroocessing">
		<echo>${dist}</echo>
		<copy todir="${dist}">
	  		<fileset dir="groocessing" />
	  	</copy>
		<chmod file="${dist}/installGroocessing.sh" perm="ugo+rx"/>
	</target>

	
</project>

